# 安装必要包
install.packages("meta")
install.packages("metafor")
library(meta)
# 读取数据
data <- read.csv("vitaminD_fracture_data.csv")
# 读取数据
set.wd(dir="/Users/cathy/Documents/学习相关/大三下/循证医学")
# 读取数据
setwd (dir="/Users/cathy/Documents/学习相关/大三下/循证医学")
data <- read.csv("vitaminD_fracture_data.csv")
#使用metabin进行二分类数据Meta分析
meta_result <- metabin(
event.e = event_treatment,  # 实验组事件数
n.e = n_treatment,          # 实验组总样本量
event.c = event_control,    # 对照组事件数
n.c = n_control,            # 对照组总样本量
data = data,
studlab = study,            # 研究标签
sm = "RR",                  # 使用风险比(RR)
method = "Inverse",         # 固定效应模型（固定效应可改为"MH"）
random = TRUE,              # 随机效应模型
hakn = FALSE,               # 是否使用Hartung-Knapp调整
prediction = TRUE,          # 显示预测区间
method.tau = "REML"         # 异质性方差估计方法
)
library(meta)
library(metafor)
# 安装必要包
install.packages("meta")
install.packages("metafor")
library(meta)
library(metafor)
# 安装必要包
#install.packages("meta")
#install.packages("metafor")
library(meta)
library(metafor)
#使用metabin进行二分类数据Meta分析
meta_result <- metabin(
event.e = event_treatment,  # 实验组事件数
n.e = n_treatment,          # 实验组总样本量
event.c = event_control,    # 对照组事件数
n.c = n_control,            # 对照组总样本量
data = data,
studlab = study,            # 研究标签
sm = "RR",                  # 使用风险比(RR)
method = "Inverse",         # 固定效应模型（固定效应可改为"MH"）
random = TRUE,              # 随机效应模型
hakn = FALSE,               # 是否使用Hartung-Knapp调整
prediction = TRUE,          # 显示预测区间
method.tau = "REML"         # 异质性方差估计方法
)
#使用metabin进行二分类数据Meta分析
meta_result <- metabin(
event.e = event_treatment,  # 实验组事件数
n.e = n_treatment,          # 实验组总样本量
event.c = event_control,    # 对照组事件数
n.c = n_control,            # 对照组总样本量
data = data,
studlab = study,            # 研究标签
sm = "RR",                  # 使用风险比(RR)
method = "Inverse",         # 固定效应模型（固定效应可改为"MH"）
random = TRUE,              # 随机效应模型
hakn = FALSE,               # 是否使用Hartung-Knapp调整
prediction = TRUE,          # 显示预测区间
method.tau = "REML"         # 异质性方差估计方法
)
#使用metabin进行二分类数据Meta分析
meta_result <- metabin(
event.e = event_treatment,
n.e = n_treatment,
event.c = event_control,
n.c = n_control,
data = data,
studlab = study,
sm = "RR",
method = "Inverse",         # 固定效应模型（若需Mantel-Haenszel法可改为 "MH"）
random = TRUE,              # 随机效应模型
method.random.ci = "classic",  # 替代 hakn = FALSE
prediction = TRUE,          # 显示预测区间
method.tau = "REML"         # 异质性方差估计方法（可选"DL"/"PM"）
)
# 查看结果
summary(meta_result)
# 绘制森林图
forest(meta_result)
setwd("/Users/cathy/Documents/学习相关/大三下/循证医学/实例_R代码")
# csv file
data1<-read.csv("Data 1.csv")
# install.packages("readxl")
library("readxl")
# xls files
my_data0 <- read_excel("Data 1.xls")
as.data.frame(my_data0)
head(my_data0)
str(my_data0)
# 修改数据
my_data3<-edit(my_data0)
# xlsx files
my_data1 <- read_excel("Data 1.xlsx")
str(my_data1)
head(my_data1)
# install.packages("meta")
library(meta)
# 自己选择文件
my_data2 <- read_excel("Data 2.xlsx")
# 自己选择文件
my_data2 <- read.csv("Data 1.csv")
# 修改数据
my_data3<-edit(my_data0)
library(XQuartz)
install.packages("XQuartz")
install.packages("XQuartz")
# 修改数据
my_data3<-edit(my_data0)
met1<-metabin(
event.e=N_hip_E,
n.e=Total_E,
event.c=N_hip_C,
n.c=Total_C,
studlab=Source,
data =my_data0,
sm ="RR"
)
met1
summary(met1)
forest(met1)
data2 <- read.csv("Data 2.csv")
met2<-metacont( n.e=N_E,
mean.e=Mean_E,
sd.e=SD_E,
n.c=N_C,
mean.c=Mean_C,
sd.c=SD_C,
data=data2,
common=TRUE,random=TRUE,
studlab= Studies)
summary(met2)
forest(met2)
# HR with CI
data3<-read_excel(path ="example HR.xlsx",sheet =1)
met3<-metagen(TE= log(HR),
lower = log(lower.HR),
upper = log(upper.HR),
data=data3,
studlab = paste(Author, Year),
sm = "HR")
summary(met3)
forest(met3)
forest(met3,leftcols = c("studlab"),colgap.forest.left="30mm")
met3<-metagen(TE=HR,
lower = lower.HR,
upper = upper.HR,
data=data3,
transf = FALSE,
studlab = paste(Author, Year),
sm = "HR")
summary(met3)
forest(met3)
forest(met3,leftcols = c("studlab"),colgap.forest.left="30mm")
# MD with SE
data4<-read_excel(path ="example MD.xlsx",sheet =1)
met4<-metagen(TE=MD,
seTE=seMD,
data=data4,
studlab = Studies,
sm = "MD")
summary(met4)
forest(met4)
forest(met4,leftcols = c("studlab"),colgap.forest.left="30mm")
# 亚组分析、meta回归
data1<-read.csv("Data 1.csv")
met1<-metabin(event.e=N_hip_E,
n.e=Total_E,
event.c=N_hip_C,
n.c=Total_C,
data=data1,
sm="RR",
studlab= paste(Source, Year))
summary(met1)
# 亚组分析
forest(update(met1,subgroup = Vitamin_D,subgroup.name = "Dose"))
devtools::install_github("gadenbuie/ermoji")
emo::ji_search("cat")
library(ermoji)
emo::ji_search("cat")
library(shiny)
library(shiny)
detach("package:shiny", unload = TRUE)
library(shiny)
emo::ji_find("cat")
library(shiny)
install.packages("shiny")
# 输出示例: "🐱" "🐈" "😸" "😹" "😺" "😻" "😼" "😽" "😾" "😿" "🙀" "🐾"
emo::ji("R is cool :sunglasses:")
library(shiny)
ui <- fluidPage(
titlePanel("我的第一个 Shiny 应用"),
sidebarLayout(
sidebarPanel(
sliderInput("n", "选择样本数量:", min=1, max=1000, value=500)
),
mainPanel(
plotOutput("histogram")
)
)
)
ui
#启动应用
shinyApp(ui = ui, server = server)
#Server 组件:处理数据逻辑并生成动态输出
server <- function(input, output) {
output$histogram <- renderPlot({
data <- rnorm(input$n)
hist(data, main = "正态分布样本直方图")
})
}
#启动应用
shinyApp(ui = ui, server = server)
emo::ji("R is cool :sunglasses:")
emo::ji_find("cat")
library(shiny)
ui <- fluidPage(
h1("Welcome!", emo::ji("wave"))
)
# 将别名转换为 Emoji
emo::ji("Hello :earth_asia:!")  # Hello 🌏!
# 正确：仅传递别名部分
emo::ji("earth_asia")  # 输出 🌏
paste0("Hello ", emo::ji("earth_asia"), "!")  # "Hello 🌏!"
setwd("/Users/cathy/Documents/学习相关/大三下/循证医学/实例_R代码")
# csv file
data1<-read.csv("Data 1.csv")
# xlsx files
my_data1 <- read_excel("Data 1.xlsx")
# install.packages("readxl")
# install.packages("XQuartz")
library("readxl")
# xlsx files
my_data1 <- read_excel("Data 1.xlsx")
str(my_data1)
head(my_data1)
# install.packages("meta")
library(meta)
# install.packages("meta")
library(meta)
met1<-metabin(
event.e=N_hip_E,
n.e=Total_E,
event.c=N_hip_C,
n.c=Total_C,
studlab=Source,
data =my_data0,
sm ="RR"
)
# xls files
my_data0 <- read_excel("Data 1.xls")
met1<-metabin(
event.e=N_hip_E,
n.e=Total_E,
event.c=N_hip_C,
n.c=Total_C,
studlab=Source,
data =my_data0,
sm ="RR"
)
met1
met1
summary(met1)
forest(met1)
data <- read_xlsx("Exercise 1.xlsx")
data
metadd<-metabin(event.e=TB_E,
n.e=Total_E,
event.c=TB_C,
n.c=Total_C,
data=data,
sm="RR",
studlab= paste(Study, Year))
mrgadd<-metareg(metadd,~Latitude)
summary(mrgadd)
plot(mrgadd)
bubble(mrgadd)
forest(mrgadd,annotate=TRUE, addfit=TRUE, addcred=TRUE)
# 发表偏移
funnel(met1)
Begg<-metabias(met1,k.min=5,method.bias = "rank")
Egger<-metabias(met1,k.min=5,method.bias = "linreg")
tr<-trimfill(met1)
funnel(tr)
# 敏感分析
metinf<-metainf(met1,pooled="random")
forest(metinf)
metcum<-metacum(met1, sortvar = Year)
forest(metcum)
# 导出图
tiff(file = "C:\\Users\\Administrator\\Desktop\\metadata\\R\\Forest1.tif",width = 3300,height = 1000,res = 300,compression ="lzw")
forest(met1,label.e="Vitamin D",label.c="Placebo")
dev.off()
# 合并meta图
met1a<-metabin(N_hip_E , Total_E , N_hip_C , Total_C,
data=data1,
common=TRUE,random=TRUE,
sm="RR", method="MH",
title="Hip Fracture",
allstudies=TRUE,
studlab= paste(Source, Year))
summary(met1a)
met1b<-metabin(N_all_E , Total_E , N_all_C , Total_C,
data=data1,
common=TRUE,random=TRUE,
sm="RR", method="MH",
title="Hip Fracture",
allstudies=TRUE,
studlab= paste(Source, Year))
summary(met1b)
forest(metabind(met1a,met1b,name=c("Hip Fracture","All Fracture")))
summary(mrgadd)
# 发表偏移
funnel(met1)
Begg<-metabias(met1,k.min=5,method.bias = "rank")
Egger<-metabias(met1,k.min=5,method.bias = "linreg")
tr<-trimfill(met1)
funnel(tr)
